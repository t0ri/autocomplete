module.exports.PrefixTreeNode=class{constructor(t){this.character=t,this.children={},this.terminal=!1}isTerminal(){return this.terminal}childrenCount(){return Object.keys(this.children).length}hasChild(t){return t in this.children}getChild(t){if(this.hasChild(t))return this.children[t];throw new Error("No child exists for character "+t)}addChild(t,e){if(this.hasChild(t))throw new Error("Child already exists for character "+t);this.children[t]=e}};var t=Object.freeze({__proto__:null});module.exports.PrefixTree=class{constructor(e){this.root=new t(""),this.stringCount=0,this.nodeCount=0,e&&e.forEach(t=>this.insert(t))}isEmpty(){return 0===this.stringCount}contains(t){const e=this.findNode(t)[0];return!(!e||!e.terminal)}insert(e){if(!this.contains(e)){let r=this.root;[...e].forEach(e=>{r.hasChild(e)||(r.addChild(e,new t(e)),this.nodeCount+=1),r=r.getChild(e)}),this.stringCount+=1,r.terminal=!0}}findNode(t){if(0===t.length)return this.root,0;let e=this.root,r=0;return[...t].forEach(i=>e.hasChild(i)?(e=e.getChild(i),r!==t.length||e.terminal?void(r+=1):[e,r]):r),[e,r]}complete(t=""){if(""===t)return this.strings();const e=[],r=this.findNode(t)[0];return!this.isEmpty()&&r&&this.traverse(r,t,e.push.bind(e)),e}strings(){const t=[];return this.traverse(this.root,"",t.push.bind(t)),t}traverse(t,e,r){t.terminal&&r(e),Object.keys(t.children).forEach(i=>{const s=t.getChild(i);this.traverse(s,e+i,r)})}};var e=Object.freeze({__proto__:null});module.exports.Autocompletion=class{constructor(t,r,i=!0){this.trie=new e,this.autocompleteCount=r,this.ignoreCasing=i,t&&this.addEntries(t)}get entries(){return this.trie.stringCount}get entriesCharCount(){return this.trie.nodeCount}autocomplete(t=""){return this.ignoreCasing&&(t=t.toLowerCase()),this.autocompleteCount?this.trie.complete(t).slice(0,this.autocompleteCount):this.trie.complete(t)}addEntry(t){t&&(this.ignoreCasing?this.trie.insert(t.toLowerCase()):this.trie.insert(t))}addEntries(t){t&&(this.ignoreCasing?t.forEach(t=>{"string"==typeof t&&this.addEntry(t.toLowerCase())}):t.forEach(t=>{this.addEntry(t)}))}};
